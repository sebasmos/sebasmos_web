{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/*\nCopyright (c) 2018-2020 Uber Technologies, Inc.\n\nThis source code is licensed under the MIT license found in the\nLICENSE file in the root directory of this source tree.\n*/\n\n/* global document */\n\n\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { styled } from '../styles/index.js';\nimport { LayersContext, Consumer } from './layers-manager.js';\nvar Container = styled('div', function (_ref) {\n  var $zIndex = _ref.$zIndex;\n  return {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    zIndex: $zIndex || null\n  };\n});\nContainer.displayName = \"Container\";\n\nvar LayerComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(LayerComponent, _React$Component);\n\n  function LayerComponent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LayerComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LayerComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      container: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onEscape\", function () {\n      if (_this.props.onEscape) {\n        _this.props.onEscape();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDocumentClick\", function (event) {\n      if (_this.props.onDocumentClick) {\n        _this.props.onDocumentClick(event);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(LayerComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.context.addEscapeHandler(this.onEscape);\n      this.context.addDocClickHandler(this.onDocumentClick);\n      var _this$props = this.props,\n          onMount = _this$props.onMount,\n          mountNode = _this$props.mountNode,\n          layersManagerHost = _this$props.host;\n\n      if (mountNode) {\n        onMount && onMount();\n        return;\n      } // There was no LayersManager added if this.props.host === undefined.\n      // Use document.body is the case no LayersManager is used.\n\n\n      var hasLayersManager = layersManagerHost !== undefined;\n\n      if (process.env.NODE_ENV !== \"production\") {\n        if (!hasLayersManager) {\n          console.warn('`LayersManager` was not found. This occurs if you are attempting to use a component requiring `Layer` without using the `BaseProvider` at the root of your app. Please visit https://baseweb.design/components/base-provider/ for more information');\n        }\n      }\n\n      var host = hasLayersManager ? layersManagerHost : document.body;\n\n      if (host) {\n        this.addContainer(host);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props2 = this.props,\n          host = _this$props2.host,\n          mountNode = _this$props2.mountNode;\n\n      if (mountNode) {\n        return;\n      }\n\n      if (host && host !== prevProps.host && prevProps.host === null) {\n        this.addContainer(host);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.context.removeEscapeHandler(this.onEscape);\n      this.context.removeDocClickHandler(this.onDocumentClick);\n\n      if (this.props.onUnmount) {\n        this.props.onUnmount();\n      }\n\n      var host = this.props.host;\n      var container = this.state.container;\n\n      if (host && container) {\n        if (host.contains(container)) {\n          host.removeChild(container);\n        }\n      }\n    }\n  }, {\n    key: \"addContainer\",\n    value: function addContainer(host) {\n      var _this$props3 = this.props,\n          index = _this$props3.index,\n          mountNode = _this$props3.mountNode,\n          onMount = _this$props3.onMount; // Do nothing if mountNode is provided\n\n      if (mountNode) {\n        return;\n      }\n\n      if (host) {\n        var container = host.ownerDocument.createElement('div'); // `host` is an DOM node, but not a React component\n\n        var sibling = typeof index === 'number' ? host.children[index] : null;\n        sibling ? host.insertBefore(container, sibling) : host.appendChild(container);\n        this.setState({\n          container: container\n        }, function () {\n          onMount && onMount();\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var container = this.state.container;\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          mountNode = _this$props4.mountNode,\n          zIndex = _this$props4.zIndex; // Only adding an additional wrapper when a layer has z-index to be set\n\n      var childrenToRender = zIndex ? React.createElement(Container, {\n        $zIndex: zIndex\n      }, children) : children;\n\n      if (typeof document !== 'undefined') {\n        if (mountNode || container) {\n          // $FlowFixMe\n          return ReactDOM.createPortal(childrenToRender, mountNode || container);\n        }\n\n        return null;\n      }\n\n      return null;\n    }\n  }]);\n\n  return LayerComponent;\n}(React.Component);\n\n_defineProperty(LayerComponent, \"contextType\", LayersContext);\n\nexport default function Layer(props) {\n  return React.createElement(Consumer, null, function (_ref2) {\n    var host = _ref2.host,\n        zIndex = _ref2.zIndex;\n    return React.createElement(LayerComponent, _extends({}, props, {\n      host: host,\n      zIndex: zIndex\n    }));\n  });\n}","map":null,"metadata":{},"sourceType":"module"}