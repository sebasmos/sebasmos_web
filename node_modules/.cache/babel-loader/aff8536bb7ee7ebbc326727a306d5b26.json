{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n/*\nCopyright (c) 2018-2020 Uber Technologies, Inc.\n\nThis source code is licensed under the MIT license found in the\nLICENSE file in the root directory of this source tree.\n*/\n\n/* eslint-disable flowtype/no-weak-types */\n\n\nexport default function deepMerge(target) {\n  target = target || {};\n  var len = arguments.length <= 1 ? 0 : arguments.length - 1;\n  var obj;\n  var value;\n\n  for (var i = 0; i < len; i++) {\n    obj = (i + 1 < 1 || arguments.length <= i + 1 ? undefined : arguments[i + 1]) || {};\n\n    for (var key in obj) {\n      if (_typeof(obj[key]) !== undefined) {\n        value = obj[key];\n\n        if (isCloneable(value)) {\n          target[key] = deepMerge(\n          /* eslint-disable-next-line no-mixed-operators */\n          target[key] || Array.isArray(value) && [] || {}, value);\n        } else {\n          target[key] = value;\n        }\n      }\n    }\n  }\n\n  return target;\n}\n/* eslint-enable flowtype/no-weak-types */\n\n/* eslint-disable-next-line flowtype/no-weak-types */\n\nfunction isCloneable(obj) {\n  /* eslint-disable-next-line eqeqeq */\n  return Array.isArray(obj) || {}.toString.call(obj) == '[object Object]';\n}","map":null,"metadata":{},"sourceType":"module"}