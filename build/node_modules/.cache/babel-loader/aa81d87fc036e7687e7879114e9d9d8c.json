{"ast":null,"code":"import { prefix } from 'inline-style-prefixer';\n\nvar SequentialIDGenerator = /*#__PURE__*/function () {\n  function SequentialIDGenerator(prefix$$1) {\n    if (prefix$$1 === void 0) {\n      prefix$$1 = \"\";\n    } // ensure start with \"ae\" so \"ad\" is never produced\n\n\n    this.prefix = prefix$$1;\n    this.count = 0;\n    this.offset = 374;\n    this.msb = 1295;\n    this.power = 2;\n  }\n\n  var _proto = SequentialIDGenerator.prototype;\n\n  _proto.next = function next() {\n    var id = this.increment().toString(36);\n    return this.prefix ? \"\" + this.prefix + id : id;\n  };\n\n  _proto.increment = function increment() {\n    var id = this.count + this.offset;\n\n    if (id === this.msb) {\n      this.offset += (this.msb + 1) * 9;\n      this.msb = Math.pow(36, ++this.power) - 1;\n    }\n\n    this.count++;\n    return id;\n  };\n\n  return SequentialIDGenerator;\n}(); // adapted from https://github.com/dutchenkoOleg/sort-css-media-queries\n\n\nvar minMaxWidth = /(!?\\(\\s*min(-device-)?-width).+\\(\\s*max(-device)?-width/i;\nvar minWidth = /\\(\\s*min(-device)?-width/i;\nvar maxMinWidth = /(!?\\(\\s*max(-device)?-width).+\\(\\s*min(-device)?-width/i;\nvar maxWidth = /\\(\\s*max(-device)?-width/i;\n\nvar isMinWidth = _testQuery(minMaxWidth, maxMinWidth, minWidth);\n\nvar isMaxWidth = _testQuery(maxMinWidth, minMaxWidth, maxWidth);\n\nvar minMaxHeight = /(!?\\(\\s*min(-device)?-height).+\\(\\s*max(-device)?-height/i;\nvar minHeight = /\\(\\s*min(-device)?-height/i;\nvar maxMinHeight = /(!?\\(\\s*max(-device)?-height).+\\(\\s*min(-device)?-height/i;\nvar maxHeight = /\\(\\s*max(-device)?-height/i;\n\nvar isMinHeight = _testQuery(minMaxHeight, maxMinHeight, minHeight);\n\nvar isMaxHeight = _testQuery(maxMinHeight, minMaxHeight, maxHeight);\n\nvar isPrint = /print/i;\nvar isPrintOnly = /^print$/i;\nvar maxValue = Number.MAX_VALUE;\n\nfunction _getQueryLength(length) {\n  var matches = /(-?\\d*\\.?\\d+)(ch|em|ex|px|rem)/.exec(length);\n\n  if (matches === null) {\n    return maxValue;\n  }\n\n  var number = matches[1];\n  var unit = matches[2];\n\n  switch (unit) {\n    case \"ch\":\n      number = parseFloat(number) * 8.8984375;\n      break;\n\n    case \"em\":\n    case \"rem\":\n      number = parseFloat(number) * 16;\n      break;\n\n    case \"ex\":\n      number = parseFloat(number) * 8.296875;\n      break;\n\n    case \"px\":\n      number = parseFloat(number);\n      break;\n  }\n\n  return +number;\n}\n\nfunction _testQuery(doubleTestTrue, doubleTestFalse, singleTest) {\n  return function (query) {\n    if (doubleTestTrue.test(query)) {\n      return true;\n    } else if (doubleTestFalse.test(query)) {\n      return false;\n    }\n\n    return singleTest.test(query);\n  };\n}\n\nfunction _testIsPrint(a, b) {\n  var isPrintA = isPrint.test(a);\n  var isPrintOnlyA = isPrintOnly.test(a);\n  var isPrintB = isPrint.test(b);\n  var isPrintOnlyB = isPrintOnly.test(b);\n\n  if (isPrintA && isPrintB) {\n    if (!isPrintOnlyA && isPrintOnlyB) {\n      return 1;\n    }\n\n    if (isPrintOnlyA && !isPrintOnlyB) {\n      return -1;\n    }\n\n    return a.localeCompare(b);\n  }\n\n  if (isPrintA) {\n    return 1;\n  }\n\n  if (isPrintB) {\n    return -1;\n  }\n\n  return null;\n}\n\nfunction sortCSSmq(a, b) {\n  if (a === \"\") {\n    return -1;\n  }\n\n  if (b === \"\") {\n    return 1;\n  }\n\n  var testIsPrint = _testIsPrint(a, b);\n\n  if (testIsPrint !== null) {\n    return testIsPrint;\n  }\n\n  var minA = isMinWidth(a) || isMinHeight(a);\n  var maxA = isMaxWidth(a) || isMaxHeight(a);\n  var minB = isMinWidth(b) || isMinHeight(b);\n  var maxB = isMaxWidth(b) || isMaxHeight(b);\n\n  if (minA && maxB) {\n    return -1;\n  }\n\n  if (maxA && minB) {\n    return 1;\n  }\n\n  var lengthA = _getQueryLength(a);\n\n  var lengthB = _getQueryLength(b);\n\n  if (lengthA === maxValue && lengthB === maxValue) {\n    return a.localeCompare(b);\n  } else if (lengthA === maxValue) {\n    return 1;\n  } else if (lengthB === maxValue) {\n    return -1;\n  }\n\n  if (lengthA > lengthB) {\n    if (maxA) {\n      return -1;\n    }\n\n    return 1;\n  }\n\n  if (lengthA < lengthB) {\n    if (maxA) {\n      return 1;\n    }\n\n    return -1;\n  }\n\n  return a.localeCompare(b);\n}\n\nvar MultiCache = /*#__PURE__*/function () {\n  function MultiCache(idGenerator, onNewCache, onNewValue) {\n    this.idGenerator = idGenerator;\n    this.onNewCache = onNewCache;\n    this.onNewValue = onNewValue;\n    this.sortedCacheKeys = [];\n    this.caches = {};\n  }\n\n  var _proto = MultiCache.prototype;\n\n  _proto.getCache = function getCache(key) {\n    if (!this.caches[key]) {\n      var _cache = new Cache(this.idGenerator, this.onNewValue);\n\n      _cache.key = key;\n      this.sortedCacheKeys.push(key);\n      this.sortedCacheKeys.sort(sortCSSmq);\n      var keyIndex = this.sortedCacheKeys.indexOf(key);\n      var insertBeforeMedia = keyIndex < this.sortedCacheKeys.length - 1 ? this.sortedCacheKeys[keyIndex + 1] : void 0;\n      this.caches[key] = _cache;\n      this.onNewCache(key, _cache, insertBeforeMedia);\n    }\n\n    return this.caches[key];\n  };\n\n  _proto.getSortedCacheKeys = function getSortedCacheKeys() {\n    return this.sortedCacheKeys;\n  };\n\n  return MultiCache;\n}();\n\nvar Cache = /*#__PURE__*/function () {\n  function Cache(idGenerator, onNewValue) {\n    this.cache = {};\n    this.idGenerator = idGenerator;\n    this.onNewValue = onNewValue;\n  }\n\n  var _proto2 = Cache.prototype;\n\n  _proto2.addValue = function addValue(key, value) {\n    var cached = this.cache[key];\n\n    if (cached) {\n      return cached;\n    }\n\n    var id = this.idGenerator.next();\n    this.cache[key] = id;\n    this.onNewValue(this, id, value);\n    return id;\n  };\n\n  return Cache;\n}();\n\nvar uppercasePattern = /[A-Z]/g;\nvar msPattern = /^ms-/;\nvar cache = {};\n\nfunction hyphenateStyleName(prop) {\n  return prop in cache ? cache[prop] : cache[prop] = prop.replace(uppercasePattern, \"-$&\").toLowerCase().replace(msPattern, \"-ms-\");\n}\n/**\n * Adapted from https://github.com/gilmoreorless/css-shorthand-properties\n */\n\n\nvar shorthandMap = {\n  // CSS 2.1: https://www.w3.org/TR/CSS2/propidx.html\n  \"list-style\": [\"list-style-type\", \"list-style-position\", \"list-style-image\"],\n  margin: [\"margin-top\", \"margin-right\", \"margin-bottom\", \"margin-left\"],\n  outline: [\"outline-width\", \"outline-style\", \"outline-color\"],\n  padding: [\"padding-top\", \"padding-right\", \"padding-bottom\", \"padding-left\"],\n  // CSS Backgrounds and Borders Module Level 3: https://www.w3.org/TR/css3-background/\n  background: [\"background-image\", \"background-position\", \"background-size\", \"background-repeat\", \"background-origin\", \"background-clip\", \"background-attachment\", \"background-color\"],\n  border: [\"border-top-width\", \"border-right-width\", \"border-bottom-width\", \"border-left-width\", \"border-width\", \"border-top-style\", \"border-right-style\", \"border-bottom-style\", \"border-left-style\", \"border-style\", \"border-top-color\", \"border-right-color\", \"border-bottom-color\", \"border-left-color\", \"border-color\"],\n  \"border-color\": [\"border-top-color\", \"border-right-color\", \"border-bottom-color\", \"border-left-color\"],\n  \"border-style\": [\"border-top-style\", \"border-right-style\", \"border-bottom-style\", \"border-left-style\"],\n  \"border-width\": [\"border-top-width\", \"border-right-width\", \"border-bottom-width\", \"border-left-width\"],\n  \"border-top\": [\"border-top-width\", \"border-top-style\", \"border-top-color\"],\n  \"border-right\": [\"border-right-width\", \"border-right-style\", \"border-right-color\"],\n  \"border-bottom\": [\"border-bottom-width\", \"border-bottom-style\", \"border-bottom-color\"],\n  \"border-left\": [\"border-left-width\", \"border-left-style\", \"border-left-color\"],\n  \"border-radius\": [\"border-top-left-radius\", \"border-top-right-radius\", \"border-bottom-right-radius\", \"border-bottom-left-radius\"],\n  \"border-image\": [\"border-image-source\", \"border-image-slice\", \"border-image-width\", \"border-image-outset\", \"border-image-repeat\"],\n  // CSS Fonts Module Level 3: https://www.w3.org/TR/css3-fonts/\n  font: [\"font-style\", \"font-variant-ligatures\", \"font-variant-alternates\", \"font-variant-caps\", \"font-variant-numeric\", \"font-variant-east-asian\", \"font-variant\", \"font-weight\", \"font-stretch\", \"font-size\", \"line-height\", \"font-family\"],\n  \"font-variant\": [\"font-variant-ligatures\", \"font-variant-alternates\", \"font-variant-caps\", \"font-variant-numeric\", \"font-variant-east-asian\"],\n  // CSS Flexible Box Layout Module Level 1: https://www.w3.org/TR/css3-flexbox-1/\n  flex: [\"flex-grow\", \"flex-shrink\", \"flex-basis\"],\n  \"flex-flow\": [\"flex-direction\", \"flex-wrap\"],\n  // CSS Grid Layout Module Level 1: https://www.w3.org/TR/css-grid-1/\n  grid: [\"grid-template-rows\", \"grid-template-columns\", \"grid-template-areas\", \"grid-auto-rows\", \"grid-auto-columns\", \"grid-auto-flow\"],\n  \"grid-template\": [\"grid-template-rows\", \"grid-template-columns\", \"grid-template-areas\"],\n  \"grid-row\": [\"grid-row-start\", \"grid-row-end\"],\n  \"grid-column\": [\"grid-column-start\", \"grid-column-end\"],\n  \"grid-area\": [\"grid-row-start\", \"grid-column-start\", \"grid-row-end\", \"grid-column-end\"],\n  \"grid-gap\": [\"grid-row-gap\", \"grid-column-gap\"],\n  // CSS Masking Module Level 1: https://www.w3.org/TR/css-masking/\n  mask: [\"mask-image\", \"mask-mode\", \"mask-position\", \"mask-size\", \"mask-repeat\", \"mask-origin\", \"mask-clip\"],\n  \"mask-border\": [\"mask-border-source\", \"mask-border-slice\", \"mask-border-width\", \"mask-border-outset\", \"mask-border-repeat\", \"mask-border-mode\"],\n  // CSS Multi-column Layout Module: https://www.w3.org/TR/css3-multicol/\n  columns: [\"column-width\", \"column-count\"],\n  \"column-rule\": [\"column-rule-width\", \"column-rule-style\", \"column-rule-color\"],\n  // CSS Scroll Snap Module Level 1: https://www.w3.org/TR/css-scroll-snap-1/\n  \"scroll-padding\": [\"scroll-padding-top\", \"scroll-padding-right\", \"scroll-padding-bottom\", \"scroll-padding-left\"],\n  \"scroll-padding-block\": [\"scroll-padding-block-start\", \"scroll-padding-block-end\"],\n  \"scroll-padding-inline\": [\"scroll-padding-inline-start\", \"scroll-padding-inline-end\"],\n  \"scroll-snap-margin\": [\"scroll-snap-margin-top\", \"scroll-snap-margin-right\", \"scroll-snap-margin-bottom\", \"scroll-snap-margin-left\"],\n  \"scroll-snap-margin-block\": [\"scroll-snap-margin-block-start\", \"scroll-snap-margin-block-end\"],\n  \"scroll-snap-margin-inline\": [\"scroll-snap-margin-inline-start\", \"scroll-snap-margin-inline-end\"],\n  // CSS Speech Module: https://www.w3.org/TR/css3-speech/\n  cue: [\"cue-before\", \"cue-after\"],\n  pause: [\"pause-before\", \"pause-after\"],\n  rest: [\"rest-before\", \"rest-after\"],\n  // CSS Text Decoration Module Level 3: https://www.w3.org/TR/css-text-decor-3/\n  \"text-decoration\": [\"text-decoration-line\", \"text-decoration-style\", \"text-decoration-color\"],\n  \"text-emphasis\": [\"text-emphasis-style\", \"text-emphasis-color\"],\n  // CSS Animations (WD): https://www.w3.org/TR/css3-animations\n  animation: [\"animation-name\", \"animation-duration\", \"animation-timing-function\", \"animation-delay\", \"animation-iteration-count\", \"animation-direction\", \"animation-fill-mode\", \"animation-play-state\"],\n  // CSS Transitions (WD): https://www.w3.org/TR/css3-transitions/\n  transition: [\"transition-property\", \"transition-duration\", \"transition-timing-function\", \"transition-delay\"]\n};\n\nfunction validateNoMixedHand(style) {\n  var hyphenatedProperties = Object.keys(style).reduce(function (acc, property) {\n    acc[hyphenateStyleName(property)] = property;\n    return acc;\n  }, {});\n  var mixed = [];\n\n  for (var property in hyphenatedProperties) {\n    if (property in shorthandMap) {\n      for (var _iterator = shorthandMap[property], _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var _longhand = _ref;\n\n        if (_longhand in hyphenatedProperties) {\n          var long = hyphenatedProperties[_longhand];\n          var short = hyphenatedProperties[property];\n          mixed.push({\n            shorthand: {\n              property: short,\n              value: style[short]\n            },\n            longhand: {\n              property: long,\n              value: style[long]\n            }\n          });\n        }\n      }\n    }\n  }\n\n  return mixed;\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction injectStylePrefixed(styleCache, styles, media, pseudo) {\n  var cache = styleCache.getCache(media);\n  var classString = \"\";\n\n  for (var originalKey in styles) {\n    var originalVal = styles[originalKey];\n\n    if (originalVal === void 0 || originalVal === null) {\n      continue;\n    }\n\n    if (_typeof(originalVal) !== \"object\") {\n      // Non-null and non-undefined primitive value\n      if (process.env.NODE_ENV !== \"production\") {\n        validateValueType(originalVal, originalKey);\n      }\n\n      var propValPair = hyphenateStyleName(originalKey) + \":\" + originalVal;\n      var key = \"\" + pseudo + propValPair;\n      var cachedId = cache.cache[key];\n\n      if (cachedId !== void 0) {\n        // cache hit\n        classString += \" \" + cachedId;\n        continue;\n      } else {\n        var _prefix; // cache miss\n\n\n        var block = \"\";\n        var prefixed = prefix((_prefix = {}, _prefix[originalKey] = originalVal, _prefix));\n\n        for (var prefixedKey in prefixed) {\n          var prefixedVal = prefixed[prefixedKey];\n\n          var prefixedValType = _typeof(prefixedVal);\n\n          if (prefixedValType === \"string\" || prefixedValType === \"number\") {\n            var prefixedPair = hyphenateStyleName(prefixedKey) + \":\" + prefixedVal;\n\n            if (prefixedPair !== propValPair) {\n              block += prefixedPair + \";\";\n            }\n          } else if (Array.isArray(prefixedVal)) {\n            var hyphenated = hyphenateStyleName(prefixedKey);\n\n            for (var i = 0; i < prefixedVal.length; i++) {\n              var _prefixedPair = hyphenated + \":\" + prefixedVal[i];\n\n              if (_prefixedPair !== propValPair) {\n                block += _prefixedPair + \";\";\n              }\n            }\n          }\n        }\n\n        block += propValPair; // ensure original prop/val is last (for hydration)\n\n        var id = cache.addValue(key, {\n          pseudo: pseudo,\n          block: block\n        });\n        classString += \" \" + id;\n      }\n    } else {\n      // Non-null object value\n      if (originalKey[0] === \":\") {\n        classString += \" \" + injectStylePrefixed(styleCache, originalVal, media, pseudo + originalKey);\n      } else if (originalKey.substring(0, 6) === \"@media\") {\n        classString += \" \" + injectStylePrefixed(styleCache, originalVal, originalKey.substr(7), pseudo);\n      }\n    }\n  }\n\n  if (process.env.NODE_ENV !== \"production\") {\n    var conflicts = validateNoMixedHand(styles);\n\n    if (conflicts.length) {\n      conflicts.forEach(function (_ref) {\n        var _JSON$stringify, _JSON$stringify2;\n\n        var shorthand = _ref.shorthand,\n            longhand = _ref.longhand;\n        var short = JSON.stringify((_JSON$stringify = {}, _JSON$stringify[shorthand.property] = shorthand.value, _JSON$stringify));\n        var long = JSON.stringify((_JSON$stringify2 = {}, _JSON$stringify2[longhand.property] = longhand.value, _JSON$stringify2)); // eslint-disable-next-line no-console\n\n        console.warn(\"Styles `\" + short + \"` and `\" + long + \"` in object yielding class \\\"\" + classString.slice(1) + \"\\\" may result in unexpected behavior. Mixing shorthand and longhand properties within the same style object is unsupported with atomic rendering.\");\n      });\n    }\n  } // remove leading space\n\n\n  return classString.slice(1);\n}\n\nfunction validateValueType(value, key) {\n  if (value === null || Array.isArray(value) || typeof value !== \"number\" && typeof value !== \"string\") {\n    throw new Error(\"Unsupported style value: \" + JSON.stringify(value) + \" used in property \" + JSON.stringify(key));\n  }\n}\n\nfunction _typeof$1(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof$1 = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof$1 = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof$1(obj);\n}\n/* eslint-disable no-console */\n\n\nvar validAnimationState = /^(from|to|\\+?(\\d*\\.)?\\d+%)(\\s*,\\s*(from|to|\\+?(\\d*\\.)?\\d+%))*$/;\n\nfunction validateKeyframesObject(keyframes) {\n  var valid = true;\n\n  for (var animationState in keyframes) {\n    var value = keyframes[animationState];\n\n    if (!validAnimationState.test(animationState)) {\n      valid = false;\n      console.warn(\"Warning: property \\\"\" + animationState + \"\\\" in keyframes object \" + JSON.stringify(keyframes) + \" is not a valid. Must be \\\"from\\\", \\\"to\\\", or a percentage.\");\n    }\n\n    if (_typeof$1(value) !== \"object\") {\n      valid = false;\n      console.warn(\"Warning: value for \\\"\" + animationState + \"\\\" property in keyframes object \" + JSON.stringify(keyframes) + \" must be an object. Instead it was a \" + _typeof$1(value) + \".\");\n    }\n\n    if (!valid) {\n      console.warn(\"Warning: object used as value for \\\"animationName\\\" style is invalid:\", keyframes);\n    }\n  }\n}\n\nfunction atomicSelector(id, pseudo) {\n  var selector = \".\" + id;\n\n  if (pseudo) {\n    selector += pseudo;\n  }\n\n  return selector;\n}\n\nfunction keyframesToBlock(keyframes) {\n  if (process.env.NODE_ENV !== \"production\") {\n    validateKeyframesObject(keyframes);\n  }\n\n  if (process.env.NODE_ENV !== \"production\" && typeof Object.getPrototypeOf(keyframes) !== \"undefined\") {\n    if (Object.getPrototypeOf(keyframes) !== Object.getPrototypeOf({})) {\n      // eslint-disable-next-line no-console\n      console.warn(\"Only plain objects should be used as animation values. Unexpectedly recieved:\", keyframes);\n    }\n  }\n\n  var result = \"\";\n\n  for (var animationState in keyframes) {\n    result += animationState + \"{\" + declarationsToBlock(keyframes[animationState]) + \"}\";\n  }\n\n  return result;\n}\n\nfunction declarationsToBlock(style) {\n  var css = \"\";\n\n  for (var prop in style) {\n    var val = style[prop];\n\n    if (typeof val === \"string\" || typeof val === \"number\") {\n      css += hyphenateStyleName(prop) + \":\" + val + \";\";\n    }\n  } // trim trailing semicolon\n\n\n  return css.slice(0, -1);\n}\n\nfunction keyframesBlockToRule(id, block) {\n  return \"@keyframes \" + id + \"{\" + block + \"}\";\n}\n\nfunction fontFaceBlockToRule(id, block) {\n  return \"@font-face{font-family:\" + id + \";\" + block + \"}\";\n}\n\nfunction styleBlockToRule(selector, block) {\n  return selector + \"{\" + block + \"}\";\n}\n/* eslint-env browser */\n\n\nvar insertRuleIntoDevtools = function insertRuleIntoDevtools(selector, block) {\n  // start after the . combinator and cut at the first : if there is one to cut out the pseudo classes\n  var key = selector.substring(1, selector.indexOf(\":\") !== -1 ? selector.indexOf(\":\") : selector.length);\n  var styles = {}; // split the declaration to catch vendor prefixing\n\n  for (var _iterator = block.split(\";\"), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var _decl = _ref;\n    if (_decl.trim() !== \"\" && !window.__STYLETRON_DEVTOOLS__.atomicMap[key]) styles[_decl.substring(0, _decl.indexOf(\":\"))] = _decl.substring(_decl.indexOf(\":\") + 1, _decl.length);\n  }\n\n  window.__STYLETRON_DEVTOOLS__.atomicMap[key] = styles;\n};\n\nvar hydrateDevtoolsRule = function hydrateDevtoolsRule(cssString) {\n  var id = cssString.substring(0, 3);\n  var block = cssString.substring(4, cssString.length - 1);\n  insertRuleIntoDevtools(id, block);\n};\n/* eslint-env browser */\n\n\nvar STYLES_HYDRATOR = /\\.([^{:]+)(:[^{]+)?{(?:[^}]*;)?([^}]*?)}/g;\nvar KEYFRAMES_HYRDATOR = /@keyframes ([^{]+)\\{((?:[^{]+\\{[^}]*\\})*)\\}/g;\nvar FONT_FACE_HYDRATOR = /@font-face\\{font-family:([^;]+);([^}]*)\\}/g;\n\nfunction hydrateStyles(cache, hydrator, css) {\n  var match;\n\n  while (match = hydrator.exec(css)) {\n    var _match = match,\n        id = _match[1],\n        pseudo = _match[2],\n        key = _match[3];\n\n    if (true && process.env.NODE_ENV !== \"production\" && window.__STYLETRON_DEVTOOLS__) {\n      hydrateDevtoolsRule(match[0]);\n    }\n\n    var fullKey = pseudo ? \"\" + pseudo + key : key;\n    cache.cache[fullKey] = id; // set cache without triggering side effects\n\n    cache.idGenerator.increment(); // increment id\n  }\n}\n\nfunction hydrate(cache, hydrator, css) {\n  var match;\n\n  while (match = hydrator.exec(css)) {\n    var _match2 = match,\n        id = _match2[1],\n        key = _match2[2];\n\n    if (true && process.env.NODE_ENV !== \"production\" && window.__STYLETRON_DEVTOOLS__) {\n      hydrateDevtoolsRule(match[0]);\n    }\n\n    cache.cache[key] = id; // set cache without triggering side effects\n\n    cache.idGenerator.increment(); // increment id\n  }\n}\n\nvar StyletronClient = /*#__PURE__*/function () {\n  function StyletronClient(opts) {\n    var _this = this;\n\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    this.styleElements = {};\n    var styleIdGenerator = new SequentialIDGenerator(opts.prefix);\n\n    var onNewStyle = function onNewStyle(cache, id, value) {\n      var pseudo = value.pseudo,\n          block = value.block;\n      var sheet = _this.styleElements[cache.key].sheet;\n      var selector = atomicSelector(id, pseudo);\n      var rule = styleBlockToRule(selector, block);\n\n      try {\n        sheet.insertRule(rule, sheet.cssRules.length);\n\n        if (true && process.env.NODE_ENV !== \"production\" && window.__STYLETRON_DEVTOOLS__) {\n          insertRuleIntoDevtools(selector, block);\n        }\n      } catch (e) {\n        if (process.env.NODE_ENV !== \"production\") {\n          // eslint-disable-next-line no-console\n          console.warn(\"Failed to inject CSS: \\\"\" + rule + \"\\\". Perhaps this has invalid or un-prefixed properties?\");\n        }\n      }\n    }; // Setup style cache\n\n\n    this.styleCache = new MultiCache(styleIdGenerator, function (media, _cache, insertBeforeMedia) {\n      var styleElement = document.createElement(\"style\");\n      styleElement.media = media;\n\n      if (insertBeforeMedia === void 0) {\n        _this.container.appendChild(styleElement);\n      } else {\n        var insertBeforeIndex = findSheetIndexWithMedia(_this.container.children, insertBeforeMedia);\n\n        _this.container.insertBefore(styleElement, _this.container.children[insertBeforeIndex]);\n      }\n\n      _this.styleElements[media] = styleElement;\n    }, onNewStyle);\n    this.keyframesCache = new Cache(new SequentialIDGenerator(opts.prefix), function (cache, id, value) {\n      _this.styleCache.getCache(\"\");\n\n      var sheet = _this.styleElements[\"\"].sheet;\n      var rule = keyframesBlockToRule(id, keyframesToBlock(value));\n\n      try {\n        sheet.insertRule(rule, sheet.cssRules.length);\n      } catch (e) {\n        if (process.env.NODE_ENV !== \"production\") {\n          // eslint-disable-next-line no-console\n          console.warn(\"Failed to inject CSS: \\\"\" + rule + \"\\\". Perhaps this has invalid or un-prefixed properties?\");\n        }\n      }\n    });\n    this.fontFaceCache = new Cache(new SequentialIDGenerator(opts.prefix), function (cache, id, value) {\n      _this.styleCache.getCache(\"\");\n\n      var sheet = _this.styleElements[\"\"].sheet;\n      var rule = fontFaceBlockToRule(id, declarationsToBlock(value));\n\n      try {\n        sheet.insertRule(rule, sheet.cssRules.length);\n      } catch (e) {\n        if (process.env.NODE_ENV !== \"production\") {\n          // eslint-disable-next-line no-console\n          console.warn(\"Failed to inject CSS: \\\"\" + rule + \"\\\". Perhaps this has invalid or un-prefixed properties?\");\n        }\n      }\n    });\n\n    if (opts.container) {\n      this.container = opts.container;\n    } // Hydrate\n\n\n    if (opts.hydrate && opts.hydrate.length > 0) {\n      // infer container from parent element\n      if (!this.container) {\n        var parentElement = opts.hydrate[0].parentElement;\n\n        if (parentElement !== null && parentElement !== void 0) {\n          this.container = parentElement;\n        }\n      }\n\n      for (var i = 0; i < opts.hydrate.length; i++) {\n        var element = opts.hydrate[i];\n        var hydrateType = element.getAttribute(\"data-hydrate\");\n\n        if (hydrateType === \"font-face\") {\n          hydrate(this.fontFaceCache, FONT_FACE_HYDRATOR, element.textContent);\n          continue;\n        }\n\n        if (hydrateType === \"keyframes\") {\n          hydrate(this.keyframesCache, KEYFRAMES_HYRDATOR, element.textContent);\n          continue;\n        }\n\n        var key = element.media ? element.media : \"\";\n        this.styleElements[key] = element;\n        var cache = new Cache(styleIdGenerator, onNewStyle);\n        cache.key = key;\n        hydrateStyles(cache, STYLES_HYDRATOR, element.textContent);\n        this.styleCache.sortedCacheKeys.push(key);\n        this.styleCache.caches[key] = cache;\n      }\n    }\n\n    if (!this.container) {\n      if (document.head === null) {\n        throw new Error(\"No container provided and `document.head` was null\");\n      }\n\n      this.container = document.head;\n    }\n  }\n\n  var _proto = StyletronClient.prototype;\n\n  _proto.renderStyle = function renderStyle(style) {\n    return injectStylePrefixed(this.styleCache, style, \"\", \"\");\n  };\n\n  _proto.renderFontFace = function renderFontFace(fontFace) {\n    var key = declarationsToBlock(fontFace);\n    return this.fontFaceCache.addValue(key, fontFace);\n  };\n\n  _proto.renderKeyframes = function renderKeyframes(keyframes) {\n    var key = keyframesToBlock(keyframes);\n    return this.keyframesCache.addValue(key, keyframes);\n  };\n\n  return StyletronClient;\n}();\n\nfunction findSheetIndexWithMedia(children, media) {\n  var index = 0;\n\n  for (; index < children.length; index++) {\n    var child = children[index];\n\n    if (child.tagName === \"STYLE\" && child.media === media) {\n      return index;\n    }\n  }\n\n  return -1;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar StyletronServer = /*#__PURE__*/function () {\n  function StyletronServer(opts) {\n    var _this = this;\n\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    this.styleRules = {\n      \"\": \"\"\n    };\n    this.styleCache = new MultiCache(new SequentialIDGenerator(opts.prefix), function (media) {\n      _this.styleRules[media] = \"\";\n    }, function (cache, id, value) {\n      var pseudo = value.pseudo,\n          block = value.block;\n      _this.styleRules[cache.key] += styleBlockToRule(atomicSelector(id, pseudo), block);\n    });\n    this.fontFaceRules = \"\";\n    this.fontFaceCache = new Cache(new SequentialIDGenerator(opts.prefix), function (cache, id, value) {\n      _this.fontFaceRules += fontFaceBlockToRule(id, declarationsToBlock(value));\n    });\n    this.keyframesRules = \"\";\n    this.keyframesCache = new Cache(new SequentialIDGenerator(opts.prefix), function (cache, id, value) {\n      _this.keyframesRules += keyframesBlockToRule(id, keyframesToBlock(value));\n    });\n  }\n\n  var _proto = StyletronServer.prototype;\n\n  _proto.renderStyle = function renderStyle(style) {\n    return injectStylePrefixed(this.styleCache, style, \"\", \"\");\n  };\n\n  _proto.renderFontFace = function renderFontFace(fontFace) {\n    var key = JSON.stringify(fontFace);\n    return this.fontFaceCache.addValue(key, fontFace);\n  };\n\n  _proto.renderKeyframes = function renderKeyframes(keyframes) {\n    var key = JSON.stringify(keyframes);\n    return this.keyframesCache.addValue(key, keyframes);\n  };\n\n  _proto.getStylesheets = function getStylesheets() {\n    return [].concat(this.keyframesRules.length ? [{\n      css: this.keyframesRules,\n      attrs: {\n        \"data-hydrate\": \"keyframes\"\n      }\n    }] : [], this.fontFaceRules.length ? [{\n      css: this.fontFaceRules,\n      attrs: {\n        \"data-hydrate\": \"font-face\"\n      }\n    }] : [], sheetify(this.styleRules, this.styleCache.getSortedCacheKeys()));\n  };\n\n  _proto.getStylesheetsHtml = function getStylesheetsHtml(className) {\n    if (className === void 0) {\n      className = \"_styletron_hydrate_\";\n    }\n\n    return generateHtmlString(this.getStylesheets(), className);\n  };\n\n  _proto.getCss = function getCss() {\n    return this.keyframesRules + this.fontFaceRules + stringify(this.styleRules, this.styleCache.getSortedCacheKeys());\n  };\n\n  return StyletronServer;\n}();\n\nfunction generateHtmlString(sheets, className) {\n  var html = \"\";\n\n  for (var i = 0; i < sheets.length; i++) {\n    var sheet = sheets[i];\n\n    var _sheet$attrs = sheet.attrs,\n        originalClassName = _sheet$attrs.class,\n        rest = _objectWithoutProperties(_sheet$attrs, [\"class\"]);\n\n    var attrs = Object.assign({\n      class: originalClassName ? className + \" \" + originalClassName : className\n    }, rest);\n    html += \"<style\" + attrsToString(attrs) + \">\" + sheet.css + \"</style>\";\n  }\n\n  return html;\n}\n\nfunction attrsToString(attrs) {\n  var result = \"\";\n\n  for (var attr in attrs) {\n    var value = attrs[attr];\n\n    if (value === true) {\n      result += \" \" + attr;\n    } else if (value !== false) {\n      result += \" \" + attr + \"=\\\"\" + value + \"\\\"\";\n    }\n  }\n\n  return result;\n}\n\nfunction stringify(styleRules, sortedCacheKeys) {\n  var result = \"\";\n  sortedCacheKeys.forEach(function (cacheKey) {\n    var rules = styleRules[cacheKey];\n\n    if (cacheKey !== \"\") {\n      result += \"@media \" + cacheKey + \"{\" + rules + \"}\";\n    } else {\n      result += rules;\n    }\n  });\n  return result;\n}\n\nfunction sheetify(styleRules, sortedCacheKeys) {\n  if (sortedCacheKeys.length === 0) {\n    return [{\n      css: \"\",\n      attrs: {}\n    }];\n  }\n\n  var sheets = [];\n  sortedCacheKeys.forEach(function (cacheKey) {\n    // omit media (cacheKey) attribute if empty\n    var attrs = cacheKey === \"\" ? {} : {\n      media: cacheKey\n    };\n    sheets.push({\n      css: styleRules[cacheKey],\n      attrs: attrs\n    });\n  });\n  return sheets;\n}\n\nexport { StyletronClient as Client, StyletronServer as Server };","map":null,"metadata":{},"sourceType":"module"}